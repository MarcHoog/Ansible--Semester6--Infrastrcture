---
- name: containerd.yml
  block:
    - name: Configure persistent loading of modules
      copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter
    
    - name: Add the overlay module
      community.general.modprobe:
        name: overlay
        state: present

    - name: Add the br_netfilter module
      community.general.modprobe:
        name: br_netfilter
        state: present
    
    - name: Ensure sysctl params are set
      become: True
      ansible.builtin.blockinfile:
        path: /etc/sysctl.d/kubernetes.conf
        marker: "# <!--{mark} ansible managed block ---!> #"
        block: |      
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1
      register: sysctl_params

    - name: Reload configs
      command: sudo sysctl --system
      when: sysctl_params.changed 

    - name: Apt update before installing packages
      apt:
        update_cache: true

    - name: Install required package
      apt: 
        name: "{{ item }}"
        state: present
      loop: "{{ contained_dependencys }}"

    - name: add docker repository key 
      become: true
      ansible.builtin.apt_key:
        url: "{{ docker_repository_key }}"
        state: present

    - name: add docker repository
      become: true
      ansible.builtin.apt_repository:
        repo: "{{ docker_repository_path }}"
        state: present

    - name: apt install containerd
      become: true
      apt:
        name: containerd.io
        state: present
        update_cache: true

    - name: make containerd folder
      ansible.builtin.file:
        path: /etc/containerd
        state: directory
      register: containerd_folder

    - name: default containerd folder
      command: containerd config default>/etc/containerd/config.toml
      when: containerd_folder.changed

    - name: use the systemd cgroup driver
      lineinfile:
        path: /etc/containerd/config.toml
        regexp: '^plugins.cri.systemd_cgroup'
        line: "plugins.cri.systemd_cgroup = true"
        state: present
        backup: true

    - name: start and enable containerd
      ansible.builtin.systemd:
        state: started
        enabled: yes
        name: containerd
    
  become: true